// Generated by CoffeeScript 1.6.3
(function() {
  var Response;

  module.exports = Response = (function() {
    function Response(request) {
      this.request = request;
      this.statusCode = this.request.status;
      this.headerString = this.request.getAllResponseHeaders();
      this.text = this.request.responseText;
    }

    Response.prototype.getHeaders = function() {
      var dividerIndex, headerLine, headerLines, key, val, _i, _len;
      if (this.headers != null) {
        return this.headers;
      }
      this.headers = {};
      headerLines = this.headerString.split("\r\n");
      for (_i = 0, _len = headerLines.length; _i < _len; _i++) {
        headerLine = headerLines[_i];
        dividerIndex = headerLine.indexOf(": ");
        if (dividerIndex > 0) {
          key = headerLine.substring(0, dividerIndex);
          val = headerLine.substring(dividerIndex + 2);
          this.headers[key.toLowerCase()] = val;
        }
      }
      return this.headers = {};
    };

    Response.prototype.getStatusCode = function() {
      return this.statusCode;
    };

    Response.prototype.getHeader = function(name) {
      return this.request.getResponseHeader(name);
    };

    Response.prototype.getText = function() {
      return this.text;
    };

    Response.prototype.isSuccess = function() {
      return this.statusCode === 200;
    };

    Response.prototype.isError = function() {
      return !this.isSuccess();
    };

    Response.prototype.isAuthorizationError = function() {
      var _ref;
      return (_ref = this.statusCode) === 401 || _ref === 403;
    };

    Response.prototype.isInternalError = function() {
      var _ref;
      return (_ref = this.statusCode) === 500;
    };

    Response.prototype.isJSON = function() {
      return this.hasContentType("application/json");
    };

    Response.prototype.isText = function() {
      return this.hasContentType("text/plain");
    };

    Response.prototype.isHTML = function() {
      return this.hasContentType("text/html");
    };

    Response.prototype.hasContentType = function(contentType) {
      var headerValue;
      if (!(headerValue = this.getHeader('content-type'))) {
        return false;
      }
      return headerValue.indexOf(contentType) === 0;
    };

    return Response;

  })();

}).call(this);

/*
//@ sourceMappingURL=Response.map
*/
