// Generated by CoffeeScript 1.6.3
(function() {
  var Response, makePromise, makeRequestObject, send;

  makePromise = require("make-promise");

  Response = require("./Response");

  module.exports = send = function(method, url, headers, data) {
    if (headers == null) {
      headers = {};
    }
//    console.log("" + method + " " + url);
    return makePromise(function(cb) {
      var headerName, headerValue, request;
      request = makeRequestObject();
      request.onreadystatechange = function() {
        switch (request.readyState) {
          case 4:
            if (!request.status) {
              return cb(new Error("Empty response."));
            }
            return cb(null, new Response(request));
        }
      };
      request.open(method, url, true);
      for (headerName in headers) {
        headerValue = headers[headerName];
        request.setRequestHeader(headerName, headerValue);
      }
      return request.send(data);
    });
  };

  makeRequestObject = function() {
    var error, x;
    if (typeof window !== "undefined" && window !== null) {
      if (window.XMLHttpRequest) {
        return new window.XMLHttpRequest;
      }
      if (window.ActiveXObject) {
        try {
          return new window.ActiveXObject("Msxml2.XMLHTTP");
        } catch (_error) {
          error = _error;
          return new window.ActiveXObject("Microsoft.XMLHTTP");
        }
      } else {
        throw new Error("XMLHTTPRequest is not supported.");
      }
    } else if (require) {
      x = require("xmlhttprequest");
      return new x.XMLHttpRequest;
    } else {
      throw new Error("XMLHTTPRequest is not supported.");
    }
  };

}).call(this);

/*
//@ sourceMappingURL=send-http-request.map
*/
